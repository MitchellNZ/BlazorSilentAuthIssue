@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IAccessTokenProvider AccessTokenProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <RedirectToLogin />
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        // PROBLEM ONE
        // Attempt to silently check for access token
        // This causes a 'Microsoft.JSInterop.JSException' - Cannot read property 'getUser' of undefined
        var tokenResult = await AccessTokenProvider.RequestAccessToken();
        if (tokenResult.TryGetToken(out var token))
        {
            Console.WriteLine($"Token: {token.Value}");
        }
        else
        {
            Console.WriteLine("No token, no worries, it's a public page.");
        }
    }
}